options
{
    /** 使用jdk1.6 */
    JDK_VERSION = "1.6";

    /** 生成非静态方法 */
    static = false;

    /** 让jjtree给每个非终结符生成一个对象 */
    MULTI = true;

    /** 开启访问者模式 */
    VISITOR = true;
}

PARSER_BEGIN(Parser)
package cc.concurrent.mango.parser;

import java.io.StringReader;
import java.io.Reader;

public class Parser {
    public Parser(String s) {
        this((Reader)(new StringReader(s)));
    }
}
PARSER_END(Parser)


TOKEN:
{
        <LPAREN: "(" >
    |   <RPAREN: ")" >
    |   <COLON: ":" >
    |   <TEXT: (~[":", "#", "("])+ >
    |   <DOT: "." >
}

TOKEN :
{
        <NUMBER: ["1"-"9"] (["0"-"9"])* >
    |   <FIELD: ["a"-"z","A"-"Z","_"] (["a"-"z","A"-"Z","_", "0"-"9"])* >
}

SimpleNode parse()  #RootNode :
{
}
{
    (Parameter() | Text())+ <EOF>
    {
        return jjtThis;
    }
}

void Parameter() #ParameterNode :
{
    Token;
}
{
    <COLON> t=<NUMBER> {jjtThis.setNum(t.image);} (<DOT> <FIELD> {jjtThis.addFieldName(t.image);})*
}

void Text() #TextNode :
{
    Token;
}
{
    t=<TEXT>
    {
        jjtThis.setText(t.image);
    }
}